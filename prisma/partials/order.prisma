model Order {
  id            String      @id @default(uuid())
  orderNumber   String      @unique @map("order_number")
  userId        String      @map("user_id")
  user          User        @relation(fields: [userId], references: [id])
  status        OrderStatus @default(PENDING)
  totalAmount   Decimal     @map("total_amount") @db.Decimal(10, 2)
  
  shippingAddress String?   @map("shipping_address")
  billingAddress  String?   @map("billing_address")
  
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  // Relations
  items         OrderItem[]

  @@index([userId])
  @@index([orderNumber])
  @@index([status])
  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String   @map("order_id")
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String   @map("product_id")
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  
  createdAt DateTime @default(now()) @map("created_at")

  @@index([orderId])
  @@index([productId])
  @@map("order_items")
}